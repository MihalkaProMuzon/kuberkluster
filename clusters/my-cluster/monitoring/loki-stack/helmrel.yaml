apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki-stack
spec:
  interval: 1m
  chart:
    spec:
      chart: loki-stack
      sourceRef:
        kind: HelmRepository
        name: grafana-rep
        namespace: monitoring
      interval: 1m
      
  values:
    loki:
      enabled: true
      isDefault: true
      url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
      readinessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      livenessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      datasource:
        jsonData: "{}"
        uid: ""

      # loki:
      #   loki:
      #     commonConfig:
      #       replication_factor: 3
      #     schemaConfig:
      #       configs:
      #       - from: "2024-01-01"
      #         store: tsdb
      #         index:
      #           prefix: loki_index_
      #           period: 24h
      #         object_store: s3
      #         schema: v13
      #     storage:
      #       type: 's3'
      #       bucketNames:
      #         chunks: loki-chunks
      #         ruler: loki-ruler
      #         admin: loki-admin
      #       s3:
      #         endpoint: foo.aws.com
      #         region: <AWS region>
      #         secretAccessKey: supersecret
      #         accessKeyId: secret
      #         s3ForcePathStyle: false
      #         insecure: false
      #   singleBinary:
      #     replicas: 2


    promtail:
      enabled: true
      config:
        logLevel: info
        serverPort: 3101
        clients:
          - url: http://{{ .Release.Name }}:3100/loki/api/v1/push
          
    grafana:
      # adminUser: admin
      # adminPassword: strongPassword
      # Use an existing secret for the admin user.
      # admin:
        ## Name of the secret. Can be templated.
        # existingSecret: ""
        # userKey: admin-user
        # passwordKey: admin-password
      enabled: true
      sidecar:
        datasources:
          label: ""
          labelValue: ""
          enabled: true
          maxLines: 1000
      image:
        tag: 10.3.3
      persistence:
        type: pvc
        enabled: true
        storageClassName: minidata
        accessModes:
          - ReadWriteOnce
        size: 1Gi
      
      grafana.ini:
        server:
          root_url: "https://komplikter-sub3.servehttp.com"
      env: 
        GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
        GF_AUTH_GENERIC_OAUTH_ENABLED: true
        GF_AUTH_GENERIC_OAUTH_NAME: Keycloak-OAuth
        GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: true
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
        # GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: dMcZLgZeEYMww7vXbUkBNB3KatJKIVc1
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid email profile offline_access roles"
        GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH: email
        GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: username
        GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: full_name
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/auth
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/token
        GF_AUTH_GENERIC_OAUTH_API_URL: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/userinfo
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'"
        GF_AUTH_GENERIC_OAUTH_ALLOW_ASSING_GRAFANA_ADMIN: true
        GF_AUTH_GENERIC_OAUTH_USE_REFRESH_TOKEN: true
        GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: groups

      envFromSecrets:
        - name: monitoring-secret

    prometheus:
      enabled: true
      isDefault: false
      url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
      datasource:
        jsonData: "{}"