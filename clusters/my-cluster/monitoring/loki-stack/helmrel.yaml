apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki-stack
spec:
  interval: 1m
  chart:
    spec:
      chart: loki-stack
      sourceRef:
        kind: HelmRepository
        name: grafana-rep
        namespace: monitoring
      interval: 1m
      
  values:
    loki:
      enabled: true
      image:
        tag: 3.1.0
      isDefault: true
      url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
      readinessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      livenessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      datasource:
        jsonData: "{}"
        uid: ""

      lokiCanary:
        enabled: false

      loki:
        schemaConfig:
          configs:
            - from: 2024-04-01
              store: tsdb
              object_store: s3
              schema: v13
              index:
                prefix: loki_index_
                period: 24h
        ingester:
          chunk_encoding: snappy
        tracing:
          enabled: true
        querier:
          max_concurrent: 4

        storage:
          type: s3
          bucketNames:
            chunks: "ls-chunks"
            ruler: "ls-ruler"
            admin: "ls-admin"
          s3:
            # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name
            # s3: s3://access_key:secret_access_key@custom_endpoint/bucket_name
            endpoint: http://192.168.0.243:9000
            region: Skibidi
            secretAccessKey: Hn3mhFXpvcXzhIELkx0j3OMeDkzixdOmXFz7gWsR
            accessKeyId: VP2YX1j3Ci8cwXlLnccW
            signatureVersion: v4
            s3ForcePathStyle: true
            insecure: true
            # HTTP configuration settings
            # http_config: {}

      deploymentMode: SimpleScalable

      backend:
        replicas: 3
      read:
        replicas: 3
      write:
        replicas: 3

      # Disable minio storage
      minio:
        enabled: false

      # Zero out replica counts of other deployment modes
      singleBinary:
        replicas: 0

      ingester:
        replicas: 0
      querier:
        replicas: 0
      queryFrontend:
        replicas: 0
      queryScheduler:
        replicas: 0
      distributor:
        replicas: 0
      compactor:
        replicas: 0
      indexGateway:
        replicas: 0
      bloomCompactor:
        replicas: 0
      bloomGateway:
        replicas: 0        







    promtail:
      enabled: true
      config:
        logLevel: info
        serverPort: 3101
        clients:
          - url: http://{{ .Release.Name }}:3100/loki/api/v1/push
          
    grafana:
      enabled: true
      sidecar:
        datasources:
          label: ""
          labelValue: ""
          enabled: true
          maxLines: 1000
      image:
        tag: 10.3.3
      persistence:
        type: pvc
        enabled: true
        storageClassName: minidata
        accessModes:
          - ReadWriteOnce
        size: 1Gi
      
      grafana.ini:
        server:
          root_url: "https://komplikter-sub3.servehttp.com"
      env: 
        GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: true
        GF_AUTH_GENERIC_OAUTH_ENABLED: true
        GF_AUTH_GENERIC_OAUTH_NAME: Keycloak-OAuth
        GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: true
        GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
        # GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: dMcZLgZeEYMww7vXbUkBNB3KatJKIVc1
        GF_AUTH_GENERIC_OAUTH_SCOPES: "openid email profile offline_access roles"
        GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH: email
        GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: username
        GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: full_name
        GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/auth
        GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/token
        GF_AUTH_GENERIC_OAUTH_API_URL: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/userinfo
        GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'"
        GF_AUTH_GENERIC_OAUTH_ALLOW_ASSING_GRAFANA_ADMIN: true
        GF_AUTH_GENERIC_OAUTH_USE_REFRESH_TOKEN: true
        GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: groups

      envFromSecrets:
        - name: monitoring-secret

      nodeSelector:
        storage: "yes"


    prometheus:
      enabled: true
      isDefault: false
      url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
      datasource:
        jsonData: "{}"
      server:
        nodeSelector:
          storage: "yes"