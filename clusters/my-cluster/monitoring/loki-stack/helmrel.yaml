apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki-stack
spec:
  interval: 1m
  chart:
    spec:
      chart: loki-stack
      sourceRef:
        kind: HelmRepository
        name: grafana-rep
        namespace: monitoring
      interval: 1m
      
  values:
    loki:
      enabled: true
      isDefault: true
      url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
      readinessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      livenessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      datasource:
        jsonData: "{}"
        uid: ""

    promtail:
      enabled: true
      config:
        logLevel: info
        serverPort: 3101
        clients:
          - url: http://{{ .Release.Name }}:3100/loki/api/v1/push
          
    grafana:
      # adminUser: admin
      # adminPassword: strongPassword
      enabled: true
      sidecar:
        datasources:
          label: ""
          labelValue: ""
          enabled: true
          maxLines: 1000
      image:
        tag: 10.3.3
      persistence:
        type: pvc
        enabled: true
        storageClassName: minidata
        accessModes:
          - ReadWriteOnce
        size: 1Gi

      env: 
        - name: GF_AUTH_GENERIC_OAUTH_ENABLED
          value: true
        - name: GF_AUTH_GENERIC_OAUTH_NAME
          value: Keycloak-OAuth
        - name: GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP
          value: true
        - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
          value: grafana
        - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
          value: dMcZLgZeEYMww7vXbUkBNB3KatJKIVc1
        - name: GF_AUTH_GENERIC_OAUTH_SCOPES
          value: "openid email profile offline_access roles"

        - name: GF_AUTH_GENERIC_OAUTH_EMAIL_ATTRIBUTE_PATH
          value: email
        - name: GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH
          value: username
        - name: GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH
          value: full_name

        - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
          value: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/auth
        - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
          value: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/token
        - name: GF_AUTH_GENERIC_OAUTH_API_URL
          value: https://komplikter-sub1.servehttp.com/realms/kuberkluster/protocol/openid-connect/userinfo

        - name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
          value: "contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'"
        - name: GF_AUTH_GENERIC_OAUTH_ALLOW_ASSING_GRAFANA_ADMIN
          value: true
        - name: GF_AUTH_GENERIC_OAUTH_USE_REFRESH_TOKEN
          value: true

        # [auth.generic_oauth]
        # enabled = true
        # name = Keycloak-OAuth
        # allow_sign_up = true
        # client_id = YOUR_APP_CLIENT_ID
        # client_secret = YOUR_APP_CLIENT_SECRET
        # scopes = openid email profile offline_access roles
        # email_attribute_path = email
        # login_attribute_path = username
        # name_attribute_path = full_name
        # auth_url = https://<PROVIDER_DOMAIN>/realms/<REALM_NAME>/protocol/openid-connect/auth
        # token_url = https://<PROVIDER_DOMAIN>/realms/<REALM_NAME>/protocol/openid-connect/token
        # api_url = https://<PROVIDER_DOMAIN>/realms/<REALM_NAME>/protocol/openid-connect/userinfo
        # role_attribute_path = contains(roles[*], 'admin') && 'Admin' || contains(roles[*], 'editor') && 'Editor' || 'Viewer'



    prometheus:
      enabled: true
      isDefault: false
      url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
      datasource:
        jsonData: "{}"